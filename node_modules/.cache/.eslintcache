[{"/Users/a.v./Documents/GitHub/CST438-Gradebook-frontend--Alexander-Verdugo-/src/index.js":"1","/Users/a.v./Documents/GitHub/CST438-Gradebook-frontend--Alexander-Verdugo-/src/App.js":"2","/Users/a.v./Documents/GitHub/CST438-Gradebook-frontend--Alexander-Verdugo-/src/reportWebVitals.js":"3","/Users/a.v./Documents/GitHub/CST438-Gradebook-frontend--Alexander-Verdugo-/src/components/Assignment.js":"4","/Users/a.v./Documents/GitHub/CST438-Gradebook-frontend--Alexander-Verdugo-/src/components/Gradebook.js":"5","/Users/a.v./Documents/GitHub/CST438-Gradebook-frontend--Alexander-Verdugo-/src/constants.js":"6","/Users/a.v./Documents/GitHub/CST438-Gradebook-frontend--Alexander-Verdugo-/src/components/AddAssignment.js":"7"},{"size":500,"mtime":1664905101181,"results":"8","hashOfConfig":"9"},{"size":931,"mtime":1664907028827,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1664905101181,"results":"11","hashOfConfig":"9"},{"size":3243,"mtime":1664912770756,"results":"12","hashOfConfig":"9"},{"size":5289,"mtime":1664905101180,"results":"13","hashOfConfig":"9"},{"size":51,"mtime":1664905101181,"results":"14","hashOfConfig":"9"},{"size":4371,"mtime":1664915860504,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rjrt2",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/Users/a.v./Documents/GitHub/CST438-Gradebook-frontend--Alexander-Verdugo-/src/index.js",[],[],"/Users/a.v./Documents/GitHub/CST438-Gradebook-frontend--Alexander-Verdugo-/src/App.js",[],[],[],"/Users/a.v./Documents/GitHub/CST438-Gradebook-frontend--Alexander-Verdugo-/src/reportWebVitals.js",[],[],"/Users/a.v./Documents/GitHub/CST438-Gradebook-frontend--Alexander-Verdugo-/src/components/Assignment.js",["41"],[],"import React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link } from 'react-router-dom'\nimport Cookies from 'js-cookie';\nimport Button from '@mui/material/Button';\nimport Radio from '@mui/material/Radio';\nimport {DataGrid} from '@mui/x-data-grid';\nimport {SERVER_URL} from '../constants.js'\n\n// NOTE:  for OAuth security, http request must have\n//   credentials: 'include' \n//\n\nclass Assignment extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {selected: 0, assignments: []};\n    };\n \n   componentDidMount() {\n    this.fetchAssignments();\n  }\n \n  fetchAssignments = () => {\n    console.log(\"Assignment.fetchAssignments\");\n    const token = Cookies.get('XSRF-TOKEN');\n    fetch(`${SERVER_URL}/gradebook`, \n      {  \n        method: 'GET', \n        headers: { 'X-XSRF-TOKEN': token }\n      } )\n    .then((response) => response.json()) \n    .then((responseData) => { \n      if (Array.isArray(responseData.assignments)) {\n        //  add to each assignment an \"id\"  This is required by DataGrid  \"id\" is the row index in the data grid table \n        this.setState({ assignments: responseData.assignments.map((assignment, index) => ( { id: index, ...assignment } )) });\n      } else {\n        toast.error(\"Fetch failed.\", {\n          position: toast.POSITION.BOTTOM_LEFT\n        });\n      }        \n    })\n    .catch(err => console.error(err)); \n  }\n  \n   onRadioClick = (event) => {\n    console.log(\"Assignment.onRadioClick \" + event.target.value);\n    this.setState({selected: event.target.value});\n  }\n  \n  render() {\n     const columns = [\n      {\n        field: 'assignmentName',\n        headerName: 'Assignment',\n        width: 400,\n        renderCell: (params) => (\n          <div>\n          <Radio\n            checked={params.row.id == this.state.selected}\n            onChange={this.onRadioClick}\n            value={params.row.id}\n            color=\"default\"\n            size=\"small\"\n          />\n          {params.value}\n          </div>\n        )\n      },\n      { field: 'courseTitle', headerName: 'Course', width: 300 },\n      { field: 'dueDate', headerName: 'Due Date', width: 200 }\n      ];\n      \n      const assignmentSelected = this.state.assignments[this.state.selected];\n      return (\n          <div align=\"left\" >\n            <h4>Assignment(s) ready to grade: </h4>\n              <div style={{ height: 450, width: '100%', align:\"left\"   }}>\n                <DataGrid rows={this.state.assignments} columns={columns} />\n              </div>                \n            <Button component={Link} to={{pathname:'/gradebook',   assignment: assignmentSelected }} \n                    variant=\"outlined\" color=\"primary\" disabled={this.state.assignments.length===0}  style={{margin: 10}}>\n              Grade\n            </Button>\n            <Button component={Link} to={{pathname:'/addassignment',   assignment: null }} \n                    variant=\"outlined\" color=\"primary\" disabled={this.state.assignments.length===0}  style={{margin: 10}}>\n              Add A New Assignment\n            </Button>\n            <ToastContainer autoClose={1500} /> \n          </div>\n      )\n  }\n}  \n\nexport default Assignment;",[],"/Users/a.v./Documents/GitHub/CST438-Gradebook-frontend--Alexander-Verdugo-/src/components/Gradebook.js",[],[],"/Users/a.v./Documents/GitHub/CST438-Gradebook-frontend--Alexander-Verdugo-/src/constants.js",[],[],"/Users/a.v./Documents/GitHub/CST438-Gradebook-frontend--Alexander-Verdugo-/src/components/AddAssignment.js",["42","43","44"],[],"import React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '@mui/material/Button';\nimport Cookies from 'js-cookie';\n// import {DataGrid} from '@mui/x-data-grid';\n// import Cookies from 'js-cookie';\n// import {SERVER_URL} from '../constants.js';\n\n// NOTE:  for OAuth security, http request must have\n//   credentials: 'include' \n//\n\nclass AddAssignment extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { assignments: [] };\n      };\n\n    // when submit button pressed, send new assignment to back end \n    handleSubmit = ( ) => {\n        console.log(\"AddAssignment.handleSubmit\");\n        const token = Cookies.get('XSRF-TOKEN');\n        \n        fetch(`http://localhost:8081//assignment/createAssignment?AssignmentName=${this.state.AssignmentName}&AssignmentDueDate=${this.state.AssignmentDueDate}&CourseId=${this.state.AssignmentCourseID}` , \n            {  \n              method: 'POST', \n              headers: { 'Content-Type': 'application/json',\n                         'X-XSRF-TOKEN': token }, \n              body: JSON.stringify({assignmentId:this.props.location.assignment.assignmentId,  assignments: this.state.assignments})\n            } )\n        .then(res => {\n            if (res.ok) {\n              toast.success(\"Assignment successfully Created\", {\n              position: toast.POSITION.BOTTOM_LEFT\n              });\n            \n            } })\n          .catch(err => {\n            toast.error(\"Failed to Create Assignment\", {\n              position: toast.POSITION.BOTTOM_LEFT\n            });\n            console.error(err);\n          });\n     };        \n\n    // when user has entered a new grade, update the state\n    //  id    - index of row of grade change\n    //  props - contains the new grade\n    handleEditCellChange = ({ id, field, props }) => {\n        console.log(\"edit cell change id:\"+id+\" field:\"+field+\" value:\"+props.value);\n        const newgrades = this.state.grades.map(r => {\n          if (r.id === id){\n            return {...r, [field]:props.value};\n          } else {\n            return {...r};\n          }\n        });\n        this.setState({grades: newgrades});\n      };\n \n     handleCellEditCommit = (e) => {\n       console.log(\"handleCellEditCommit \"+JSON.stringify(e));\n       const newgrades= this.state.grades.map(r => {\n         //console.log(r.id+\"   \"+e.id);\n         if (r.id === e.id) {\n           return {...r, [e.field]:e.value};\n         } else {\n           return {...r};\n         }\n       });\n       this.setState({grades: newgrades});\n     };\n  \n\n    render() {\n        const columns = [\n         { field: 'assignmentName', headerName: 'Assignment Name', width: 250, editable:true },\n         { field: 'dueDate', headerName: 'Due Date', width: 250, editable:true},\n         ];\n         \n         const CourseId = this.props.location.CourseId;\n\n         return(\n             <div align=\"left\" >\n                <h4>Enter Assignment Feilds </h4>\n               <div style={{ height: 250, width: '100%' ,margin:20}}>\n\n               \n               <div  style={{display: \"flex\",width: '70%',margin:20,justifyContent:\"space-between\"}}>\n               <h5>Assignment Name: </h5>\n               <input\n                    type= \"text\"\n                    id=\"AssignmentName\"\n                    onChange={this.handleChange}\n                    value={this.state.AssignmentName}\n                    />\n                     <h5>Assignment Due Date: </h5>\n               <input\n                    type= \"text\"\n                    id=\"AssignmentDueDate\"\n                    onChange={this.handleChange}\n                    value={this.state.AssignmentDueDate}\n                    />\n                     <h5>Assignment Course ID: </h5>\n               <input\n                    type= \"text\"\n                    id=\"AssignmentCourseID\"\n                    onChange={this.handleChange}\n                    value={this.state.AssignmentCourseID}\n\n                    />\n                </div>\n               </div>\n                <Button id=\"CreateAssignment\" variant=\"outlined\" color=\"primary\" onClick={this.handleSubmit} >\n                    Create Assignment\n                 </Button>\n              \n             </div>\n             ); \n         }\n\n}\nexport default AddAssignment;",{"ruleId":"45","severity":1,"message":"46","line":61,"column":36,"nodeType":"47","messageId":"48","endLine":61,"endColumn":38},{"ruleId":"49","severity":1,"message":"50","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":24},{"ruleId":"49","severity":1,"message":"53","line":78,"column":15,"nodeType":"51","messageId":"52","endLine":78,"endColumn":22},{"ruleId":"49","severity":1,"message":"54","line":83,"column":16,"nodeType":"51","messageId":"52","endLine":83,"endColumn":24},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","'columns' is assigned a value but never used.","'CourseId' is assigned a value but never used."]